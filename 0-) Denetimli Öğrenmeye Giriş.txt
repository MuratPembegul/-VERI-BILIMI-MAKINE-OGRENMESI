# Denetimli Öğrenme Nedir?

Denetimli öğrenme, makine öğrenmesinin bir alt dalıdır ve etiketlenmiş veri kullanarak modellerin eğitildiği bir süreçtir. Model, eğitim verilerindeki girdiler ile çıktılar arasındaki ilişkiyi öğrenir ve bu ilişkiyi kullanarak yeni, bilinmeyen veriler için tahminlerde bulunur. Denetimli öğrenme algoritmalarında iki ana tür bulunur:

    Sınıflandırma: Veriler, önceden tanımlanmış sınıflara ayrılır.
    Regresyon: Sayısal bir çıktının tahmin edilmesi amacıyla kullanılır.

# Örnek: E-posta sınıflandırma

E-posta gelen kutusundaki mesajları "spam" ya da "normal" olarak sınıflandırmak, denetimli öğrenmeye bir örnektir. Sisteme önce hangi mesajların spam, hangilerinin normal olduğu öğretilir, ardından yeni e-postalar bu bilgi ışığında sınıflandırılır.
Doğrusal Regresyon (Linear Regression)

Doğrusal regresyon, en basit regresyon yöntemlerinden biridir ve bir bağımlı değişken (y) ile bir veya daha fazla bağımsız değişken (x) arasındaki doğrusal ilişkiyi modellemek için kullanılır. Amaç, veri noktalarını en iyi temsil eden doğruyu bulmaktır.
# Kod Örneği:

python

from sklearn.linear_model import LinearRegression

# Eğitim verisi
X = [[1], [2], [3], [4], [5]]
y = [2, 4, 6, 8, 10]

# Model oluşturma
model = LinearRegression()
model.fit(X, y)

# Yeni bir tahmin yapma
yeni_veri = [[6]]
tahmin = model.predict(yeni_veri)
print(f"Tahmin edilen değer: {tahmin[0]}")

# Açıklama:

Bu kod, basit bir doğrusal regresyon modeli oluşturur ve yeni bir giriş verisi için tahmin yapar.
Lojistik Regresyon (Logistic Regression)

Lojistik regresyon, sınıflandırma problemlerinde kullanılır. Adında "regresyon" geçse de, sınıflandırma amacı güder. Model, bir olayın olasılığını tahmin etmek için sigmoid fonksiyonunu kullanır.
# Kod Örneği:

python

from sklearn.linear_model import LogisticRegression

# Eğitim verisi (X: bağımsız değişkenler, y: etiketler)
X = [[1], [2], [3], [4], [5]]
y = [0, 0, 0, 1, 1]

# Model oluşturma
model = LogisticRegression()
model.fit(X, y)

# Yeni bir tahmin yapma
yeni_veri = [[6]]
tahmin = model.predict(yeni_veri)
print(f"Tahmin edilen sınıf: {tahmin[0]}")

# Açıklama:

Bu kod, lojistik regresyon modeliyle bir sınıflandırma yapar. Yeni bir veriye göre tahmin edilen sınıfı gösterir.
Destek Vektör Makineleri (SVM)

Destek vektör makineleri, sınıflandırma ve regresyon problemleri için kullanılan güçlü bir algoritmadır. Temel amacı, veriyi farklı sınıflara ayırmak için en uygun sınırı bulmaktır. Bu sınır, iki sınıf arasındaki en geniş mesafeyi sağlar.
# Kod Örneği:

python

from sklearn import svm

# Eğitim verisi
X = [[1, 2], [5, 8], [1.5, 1.8], [8, 8], [1, 0.6], [9, 11]]
y = [0, 1, 0, 1, 0, 1]

# Model oluşturma
model = svm.SVC()
model.fit(X, y)

# Yeni bir tahmin yapma
yeni_veri = [[10, 10]]
tahmin = model.predict(yeni_veri)
print(f"Tahmin edilen sınıf: {tahmin[0]}")

# Açıklama:

Bu örnekte, SVM algoritması veriyi iki sınıfa ayırır ve yeni bir veri için sınıf tahmini yapar.
Rastgele Ormanlar (Random Forests)

Rastgele ormanlar, birden fazla karar ağacının bir araya gelmesiyle oluşturulan güçlü bir sınıflandırma ve regresyon yöntemidir. Her ağaç, verinin farklı bir alt kümesini kullanarak eğitilir ve nihai tahmin, ağaçların çoğunluk kararına veya ortalamasına göre yapı3lır.
# Kod Örneği:

python

from sklearn.ensemble import RandomForestClassifier

# Eğitim verisi
X = [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]
y = [0, 0, 1, 1, 0]

# Model oluşturma
model = RandomForestClassifier(n_estimators=10)
model.fit(X, y)

# Yeni bir tahmin yapma
yeni_veri = [[4, 5]]
tahmin = model.predict(yeni_veri)
print(f"Tahmin edilen sınıf: {tahmin[0]}")

# Açıklama:

Bu kod, rastgele ormanlar algoritmasını kullanarak yeni bir veri için sınıf tahmini yapar.
Denetimli Öğrenmenin Avantajları ve Dezavantajları
Avantajlar:

    Yüksek doğruluk
    Öğrenme süreci verimli ve öngörülebilirdir
    Gerçek dünya uygulamalarında sıkça kullanılır (sınıflandırma ve regresyon)

Dezavantajlar:

    Büyük miktarda etiketlenmiş veri gerektirir
    Aşırı uyum (overfitting) riski

Bu yazıya, yeni algoritmalar ve konular öğrendikçe eklemeler yapılacaktır. Şimdilik bu, denetimli öğrenmeye giriş için güçlü bir başlangıç olacak!
